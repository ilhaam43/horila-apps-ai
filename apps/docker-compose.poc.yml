version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.poc
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=settings_poc
      - DEBUG=True
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Optional: Add PostgreSQL for production-like testing
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: ai_services_poc
      POSTGRES_USER: poc_user
      POSTGRES_PASSWORD: poc_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U poc_user -d ai_services_poc"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: ai_services_poc_network